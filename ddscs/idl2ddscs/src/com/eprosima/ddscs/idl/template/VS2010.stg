/* $Id$   *
 * (c) Copyright, eProsima, 2012.                                          *
 * All rights reserved.                                                    *    
 *                                                                         *
 * No duplications, whole or partial, manual or electronic, may be made    *
 * without express written permission.  Any such copies, or                *
 * revisions thereof, must display this notice unaltered.                  *
 * This code contains trade secrets of                                     *
 * eProsima (Proyectos y Sistemas de Mantenimiento S.L.)                   *
 *                                                                         *
 * modification history                                                    *
 * --------------------                                                    *
 * 1.0,30jun12,RicG Created                                                *
 * =====================================================================   *
 */

group VS2010;

/************************************************************************
 *                                                                      *
 *   External Templates: Common Templates for C++ code generation       *
 *                                                                      *
 ************************************************************************
 */
/**
 * solution: External Template
 * Produces a VS2010 solution file 
 * 
 * Params:
 *   projects       : List of objects with name, guid and dependsOn properties.
 *   configurations : List of configuration names. 
 *
 * Uses:
 *   projectRef                    - local
 *   projectConfigurationPlatforms - local
 */ 
solution(projects, configurations) ::= <<
Microsoft Visual Studio Solution File, Format Version 11.00
# Visual Studio 2010
$projects:{$projectRef(it)$};separator="\n"$
Global
$\t$GlobalSection(SolutionConfigurationPlatforms) = preSolution
$configurations:{conf |$\t$$\t$$conf.name$|$conf.platform$ = $conf.name$|$conf.platform$};separator="\n"$
$\t$EndGlobalSection
$\t$GlobalSection(ProjectConfigurationPlatforms) = postSolution
$projects:{$projectConfigurationPlatforms(guid=it.guid, configurations=configurations)$};separator="\n"$
$\t$EndGlobalSection
$\t$GlobalSection(SolutionProperties) = preSolution
$\t$$\t$HideSolutionNode = FALSE
$\t$EndGlobalSection
EndGlobal

>>

/**
 * project: External Template
 * Produces a VS2005 C++ project file (.vcproj)  
 * 
 * Params:
 *   guid           : GUID for this project.
 *   name           : project name. 
 *   configurations : List of VSConfiguration objects that 
 *                    have name string property and
 *                    boolean debugDll, releaseDll, debug & release properties.
 *   sourceFiles    : List with the sources of this project.
 *   headerFiles    : List with the headers of this project.
 * Uses:
 *   configuration - local
 *   filter        - local
 */ 
project(guid, name, configurations, sourceFiles, headerFiles) ::= <<
<?xml version="1.0" encoding="Windows-1252"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    $configurations:{<ProjectConfiguration Include="$it.name$|$it.platform$">
      <Configuration>$it.name$</Configuration>
      <Platform>$it.platform$</Platform>
    </ProjectConfiguration>};separator="\n"$
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectName>$name$</ProjectName>
    <ProjectGuid>{$guid$}</ProjectGuid>
    <RootNamespace>$name$</RootNamespace>
  </PropertyGroup>
  <Import Project="\$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  $configurations:{<PropertyGroup Condition="'\$(Configuration)|\$(Platform)'=='$it.name$|$it.platform$'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>};separator="\n"$
  <Import Project="\$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  $configurations:{<ImportGroup Label="PropertySheets" Condition="'\$(Configuration)|\$(Platform)'=='$it.name$|$it.platform$'">
    <Import Project="\$(UserRootDir)\Microsoft.Cpp.\$(Platform).user.props" Condition="exists('\$(UserRootDir)\Microsoft.Cpp.\$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>};separator="\n"$
  <PropertyGroup Label="UserMacros" />
  $configurations:{<PropertyGroup Condition="'\$(Configuration)|\$(Platform)'=='$it.name$|$it.platform$'">
    <OutDir>.\objs\i86Win32VS2010\</OutDir>
    <IntDir>.\objs\i86Win32VS2010\</IntDir>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules/>
    <CodeAnalysisRuleAssemblies/>
  </PropertyGroup>};separator="\n"$
  $configurations:{<ItemDefinitionGroup Condition="'\$(Configuration)|\$(Platform)'=='$it.name$|$it.platform$'">
    <ClCompile>
      <Optimization>$if(it.debug)$Disabled$else$MaxSpeed$endif$</Optimization>
      <AdditionalIncludeDirectories>\$(NDDSHOME)\include;\$(NDDSHOME)\include\ndds;..\..\..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>$preprocessorDefs(conf=it)$</PreprocessorDefinitions>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>$runtimeLibrary(conf=it)$</RuntimeLibrary>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <PrecompiledHeaderOutputFile>
      </PrecompiledHeaderOutputFile>
      <AssemblerListingLocation>.\objs\i86Win32VS2010\</AssemblerListingLocation>
      <ObjectFileName>.\objs\i86Win32VS2010\</ObjectFileName>
      <ProgramDataBaseFileName>.\objs\i86Win32VS2010\</ProgramDataBaseFileName>
      <WarningLevel>Level3</WarningLevel>
      <SuppressStartupBanner>true</SuppressStartupBanner>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <CompileAs>Default</CompileAs>
    </ClCompile>
    <Link>
      <AdditionalDependencies>$dependencies(conf=it)$;netapi32.lib;advapi32.lib;user32.lib;WS2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <OutputFile>.\objs\i86Win32VS2010\\\$(ProjectName).exe</OutputFile>
      <SuppressStartupBanner>true</SuppressStartupBanner>
      <AdditionalLibraryDirectories>\$(NDDSHOME)\lib\i86Win32VS2010;..\..\..\..\lib\i86win32vs2010;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <IgnoreSpecificDefaultLibraries>$ignoreDefaultLibraryNames(conf=it)$;%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <GenerateDebugInformation>$generateDebugInformation(conf=it)$</GenerateDebugInformation>
      <ProgramDatabaseFile>.\objs\i86Win32VS2010\\$name$.pdb</ProgramDatabaseFile>
      <SubSystem>Console</SubSystem>
      <TargetMachine>MachineX86</TargetMachine>
    </Link>
  </ItemDefinitionGroup>};separator="\n"$
  <ItemGroup>
    $filter(files=sourceFiles,tagName="ClCompile")$
  </ItemGroup>
  <ItemGroup>
    $filter(files=headerFiles,tagName="ClInclude")$ 
  </ItemGroup>
  <Import Project="\$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>
>>

/************************************************************************
 *                                                                      *
 *   Internal Templates: For internal use only.                         *
 *                                                                      *
 ************************************************************************
 */

/**
 * projectRef: Internal Template
 * Produces Project Reference in a VS2005/2008 solution file. 
 * 
 * Params:
 *   project : Object with name, guid and dependsOn properties.
 *
 * Uses:
 */ 
projectRef(project) ::= <<
Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "$project.name$", "$project.name$-vs2010.vcxproj", "{$project.guid$}"
$if(project.dependsOn)$
$\t$ProjectSection(ProjectDependencies) = postProject
$\t$$\t${$project.dependsOn$} = {$project.dependsOn$}
$\t$EndProjectSection
$endif$
EndProject
>>

/**
 * projectConfigurationPlatforms: Internal Template
 * Produces the ProjectConfigurationPlatforms section content of a VS2005 solution file
 * for the project guid provided 
 * 
 * Params:
 *   guid           : Project GUID.
 *   configurations : List of configuration names. 
 *
 * Uses:
 *   postSolution - local
 */ 
projectConfigurationPlatforms(guid, configurations) ::= <<
$configurations:{conf | $postSolution(guid = guid, conf = conf)$};separator="\n"$
>>


/**
 * postSolution: Internal Template
 * Produces the Active and Build.0 attributes in projectConfigurationPlatforms section
 * of a VS2005 solution file, for the given project guid and configuration name.
 * and configuration name.
 * 
 * Params:
 *   guid : Project GUID.
 *   conf : Configuration name. 
 *
 * Uses:
 */ 
postSolution(guid, conf) ::= <<
$\t$$\t${$guid$}.$conf.name$|$conf.platform$.ActiveCfg = $conf.name$|$conf.platform$
$\t$$\t${$guid$}.$conf.name$|$conf.platform$.Build.0 = $conf.name$|$conf.platform$
>>

/**
 * ignoreDefaultLibraryNames: Internal Template
 * Produces the IgnoreDefaultLibraryNames attribute of VCLinkerTool 
 * in a configuration section of a VS2005 .vcproj file. 
 * 
 * Params:
 *   conf : VSCOnfiguration object. 
 *
 * Uses:
 */ 
ignoreDefaultLibraryNames(conf) ::= <<
LIBCMT$if(it.debug)$D$endif$
>>

/**
 * generateDebugInformation: Internal Template
 * Produces the GenerateDebugInformation attribute of VCLinkerTool 
 * in a configuration section of a VS2005 .vcproj file. 
 * 
 * Params:
 *   conf : VSCOnfiguration object. 
 *
 * Uses:
 */ 
generateDebugInformation(conf) ::= <<
$if(conf.debug)$true$else$false$endif$
>>

/**
 * preprocessorDefs: Internal Template
 * Adds the suitable definitons to PreprocessorDefinitions attribute of VCCLCompilerTool 
 * in a configuration section of a VS2005 .vcproj file. 
 * 
 * Params:
 *   conf : VSCOnfiguration object. 
 *
 * Uses:
 */ 
preprocessorDefs(conf) ::= <<
WIN32;RTI_WIN32;_CONSOLE;_CRT_SECURE_NO_WARNINGS;$if(it.dll)$NDDS_DLL_VARIABLE;WIN32_LEAN_AND_MEAN;$endif$$if(it.debug)$_DEBUG$else$NDEBUG$endif$;%(PreprocessorDefinitions)
>>

/**
 * runtimeLibrary: Internal Template
 * Produces the RuntimeLibrary attribute of VCCLCompilerTool 
 * in a configuration section of a VS2005 .vcproj file. 
 * 
 * Params:
 *   conf : VSCOnfiguration object. 
 *
 * Uses:
 */ 
runtimeLibrary(conf) ::= <<
$if(it.dll)$$if(it.debug)$MultiThreadedDebugDLL$else$MultiThreadedDLL$endif$$else$$if(it.debug)$MultiThreadedDebug$else$MultiThreaded$endif$$endif$
>>

/**
 * dependencies: Internal Template
 * Adds the suitable libraries to AdditionalDependencies attribute of VCLinkerTool 
 * in a configuration section of a VS2005 .vcproj file. 
 * 
 * Params:
 *   conf : VSCOnfiguration object. 
 *
 * Uses:
 */ 
dependencies(conf) ::= <<
nddscpp$if(it.dll)$$else$z$endif$$if(it.debug)$d$endif$.lib; nddsc$if(it.dll)$$else$z$endif$$if(it.debug)$d$endif$.lib; nddscore$if(it.dll)$$else$z$endif$$if(it.debug)$d$endif$.lib; ddscs$if(it.dll)$$else$z$endif$$if(it.debug)$d$endif$.lib
>>

/**
 * file: Internal Template
 * Produces a Filter section of a VS2005 .vcproj file. 
 * 
 * Params:
 *   files        : List of fileNames belonging to this filter.
 *   filterName   : The filter name. 
 *   filterString : Set of file extensions. 
 *
 * Uses:
 *   file - local
 */ 
filter(files, tagName) ::= <<
    $files:{fileName | <$tagName$ Include="$fileName$" />};separator="\n"$
>>
