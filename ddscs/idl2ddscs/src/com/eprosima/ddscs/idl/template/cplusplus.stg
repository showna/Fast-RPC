group cplusplus;

typeInitMap ::= [
        "char":"DDS_Char",
        "wchar":"DDS_Wchar",
        "octet":"DDS_Octet",
        "short":"DDS_Short",
        "unsigned short":"DDS_UnsignedShort",
        "long":"DDS_Long",
        "unsigned long":"DDS_UnsignedLong",
        "long long":"DDS_LongLong",
        "unsigned long long":"DDS_UnsignedLongLong",
        "float":"DDS_Float",
        "double":"DDS_Double",
        "long double":"DDS_LongDouble",
        "boolean":"DDS_Boolean",
        "string":"char*",
        "void":,
        default:key // anything other than an atomic type
]

argDecl(arg) ::= <<
$arg:{n | $typeInitMap.(n.type)$ $n.name$};separator=", "$
>>

argDeclRef(arg) ::= <<
$arg:{n | $typeInitMap.(n.type)$ &$n.name$};separator=", "$
>>

functionReturnType(type) ::= <<
$if(typeInitMap.(type))$
$typeInitMap.(type)$
$else$
void
$endif$
>>

functionHeader(type,class,name,inputParams,inoutParams,outputParams) ::= << 
$functionReturnType(type)$ $class$$if(class)$::$endif$$name$($argDecl(inputParams);separator=", "$ $if(inoutParams)$,
              $endif$$argDeclRef(inoutParams);separator=", "$$if(outputParams)$,
              $endif$$argDeclRef(outputParams);separator=", "$)
>>

include(funNames) ::= <<
$funNames:{
#include "$it$RequestUtils.h"
#include "$it$ReplyUtils.h"
}$
>>
