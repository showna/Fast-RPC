/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "UnionTestRequestReplyUtils.h"
#include "UnionTestRequestReplyPlugin.h"


const char* getEmpleadoRequestUtils::registerType(DDSDomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getEmpleadoRequestTypeSupport::get_type_name();

        if(getEmpleadoRequestTypeSupport::register_type(clientParticipant, typeName) != DDS_RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

getEmpleadoRequest* getEmpleadoRequestUtils::createTypeData(Empleado & em1, Empleado & em2)
{
    getEmpleadoRequest* instance = getEmpleadoRequestTypeSupport::create_data();

    EmpleadoPluginSupport_copy_data(&instance->em1, &em1);
    EmpleadoPluginSupport_copy_data(&instance->em2, &em2);
    
    
    return instance;
}

void getEmpleadoRequestUtils::extractTypeData(getEmpleadoRequest* data , Empleado  &em1, Empleado  &em2)
{
    EmpleadoPluginSupport_copy_data(&em1, &data->em1);
    EmpleadoPluginSupport_copy_data(&em2, &data->em2);
    
    
}


const char* getEmpleadoReplyUtils::registerType(DDSDomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getEmpleadoReplyTypeSupport::get_type_name();

        if(getEmpleadoReplyTypeSupport::register_type(clientParticipant, typeName) != DDS_RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

getEmpleadoReply* getEmpleadoReplyUtils::createTypeData(Empleado & em2, Empleado & em3, Empleado& returnedValue)
{
    getEmpleadoReply* instance = getEmpleadoReplyTypeSupport::create_data();

    EmpleadoPluginSupport_copy_data(&instance->em2, &em2);
    EmpleadoPluginSupport_copy_data(&instance->em3, &em3);
    
    EmpleadoPluginSupport_copy_data(&instance->returnedValue, &returnedValue);            
    return instance;
}

void getEmpleadoReplyUtils::extractTypeData(getEmpleadoReply* data , Empleado  &em2, Empleado  &em3, Empleado& returnedValue)
{
    EmpleadoPluginSupport_copy_data(&em2, &data->em2);
    EmpleadoPluginSupport_copy_data(&em3, &data->em3);
    
    EmpleadoPluginSupport_copy_data(&returnedValue, &data->returnedValue);            
}

 