#ifndef _TypedefTest_PROXY_H_
#define _TypedefTest_PROXY_H_

/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "client/Client.h"
#include "TypedefTestRequestReplyUtils.h"
#include "TypedefTestClientRPCSupport.h"

class TypedefTestProxy : public eProsima::DDSRPC::Client
{
    public:

        /// \brief The default constructor.
        TypedefTestProxy(int domainId = 0, unsigned int timeout = 3000,
        const char *qosLibrary =  "TypedefTest_Library", const char *qosProfile = "TypedefTest_Profile");

        /// \brief The default destructor.
        virtual ~TypedefTestProxy();

        unsigned int getTimeout();
        void setTimeout(unsigned int millis);
        
         
        eProsima::DDSRPC::ReturnMessage
         getLargo(largo l1 ,largo &l2, largo &getLargo_ret);
         
        eProsima::DDSRPC::ReturnMessage
         getLarguisimo(larguisimo ll1 ,larguisimo &ll2, larguisimo &getLarguisimo_ret);
         
        eProsima::DDSRPC::ReturnMessage
         getDatosDef(DatosDef* d1 ,DatosDef* &d2, DatosDef* &getDatosDef_ret);
         
        eProsima::DDSRPC::ReturnMessage
         getDatosDefondo(DatosDefondo* dd1 ,DatosDefondo* &dd2, DatosDefondo* &getDatosDefondo_ret);
         
        eProsima::DDSRPC::ReturnMessage
         getCadena(cadena c1 ,cadena &c2, cadena &getCadena_ret);
         
        eProsima::DDSRPC::ReturnMessage
         getCorrea(correa cc1 ,correa &cc2, correa &getCorrea_ret);
        
    private:
        eProsima::DDSRPC::ClientRPC *getLargo_Service;
        eProsima::DDSRPC::ClientRPC *getLarguisimo_Service;
        eProsima::DDSRPC::ClientRPC *getDatosDef_Service;
        eProsima::DDSRPC::ClientRPC *getDatosDefondo_Service;
        eProsima::DDSRPC::ClientRPC *getCadena_Service;
        eProsima::DDSRPC::ClientRPC *getCorrea_Service; 
        
        unsigned int m_timeout;
};

#endif // _TypedefTest_PROXY_H_