#ifndef _SequenceTest_PROXY_H_
#define _SequenceTest_PROXY_H_

/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "client/Client.h"
#include "SequenceTestRequestReplyUtils.h"
#include "SequenceTestClientRPCSupport.h"

class SequenceTestProxy : public eProsima::DDSRPC::Client
{
    public:

        /// \brief The default constructor.
        SequenceTestProxy(int domainId = 0, unsigned int timeout = 3000,
        const char *qosLibrary =  "SequenceTest_Library", const char *qosProfile = "SequenceTest_Profile");

        /// \brief The default destructor.
        virtual ~SequenceTestProxy();

        unsigned int getTimeout();
        void setTimeout(unsigned int millis);
        
         
        eProsima::DDSRPC::ReturnMessage
         getSLong(largo* l1 ,largo* &l2,largo* &l3, largo* &getSLong_ret);
         
        eProsima::DDSRPC::ReturnMessage
         getString(cadena* s1 ,cadena* &s2,cadena* &s3, cadena* &getString_ret);
         
        eProsima::DDSRPC::ReturnMessage
         getStringBounded(dattos* sb1 ,dattos* &sb2,dattos* &sb3, dattos* &getStringBounded_ret);
        
    private:
        eProsima::DDSRPC::ClientRPC *getSLong_Service;
        eProsima::DDSRPC::ClientRPC *getString_Service;
        eProsima::DDSRPC::ClientRPC *getStringBounded_Service; 
        
        unsigned int m_timeout;
};

#endif // _SequenceTest_PROXY_H_