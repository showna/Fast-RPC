/** 
 * Generated by DDSRPC                                              *
 * Empty interface implementation to be filled with your own code.  *
 */
 
#include "EnumYStringTestServerImpl.h"

EnumYStringTestImpl::EnumYStringTestImpl()
{
}
EnumYStringTestImpl::~EnumYStringTestImpl()
{
}

 
eProsima::DDSRPC::ReturnMessage
 EnumYStringTestImpl::getEnum(Valores v1 ,Valores &v2,Valores &v3, Valores &getEnum_ret) 
{
  eProsima::DDSRPC::ReturnMessage retCode = eProsima::DDSRPC::OPERATION_SUCCESSFUL;

  v3 = v2;
  getEnum_ret = v1;
  v2 = v1;
  
  return retCode;
} 
 
eProsima::DDSRPC::ReturnMessage
 EnumYStringTestImpl::getString(char* s1 ,char* &s2,char* &s3, char* &getString_ret) 
{
  eProsima::DDSRPC::ReturnMessage retCode = eProsima::DDSRPC::OPERATION_SUCCESSFUL;

  s3 = DDS_String_dup(s2);
  getString_ret = DDS_String_dup(s1);
  DDS_String_free(s2);
  s2 = DDS_String_alloc(strlen(s1) + strlen(s3) + 1);
  _snprintf(s2, strlen(s1) + strlen(s3) + 1, "%s%s", s1, s3);
  
  return retCode;
} 
 
eProsima::DDSRPC::ReturnMessage
 EnumYStringTestImpl::getStringBounded(char* sb1 ,char* &sb2,char* &sb3, char* &getStringBounded_ret) 
{
  eProsima::DDSRPC::ReturnMessage retCode = eProsima::DDSRPC::OPERATION_SUCCESSFUL;

  sb3 = DDS_String_dup(sb2);
  getStringBounded_ret = DDS_String_dup(sb1);
  DDS_String_free(sb2);
  sb2 = DDS_String_alloc(strlen(sb1) + strlen(sb3) + 1);
  _snprintf(sb2, strlen(sb1) + strlen(sb3) + 1, "%s%s", sb1, sb3);
  
  return retCode;
} 
