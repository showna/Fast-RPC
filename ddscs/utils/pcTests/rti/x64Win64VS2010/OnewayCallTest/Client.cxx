/** 
 * Generated by DDSRPC                                                   *
 * Example client. Method params should be initialized before execution  *
 */

#include "OnewayCallTestProxy.h"
#include "OnewayCallTestRequestReplyPlugin.h"
#include "exceptions/Exceptions.h"

int main(int argc, char **argv)
{
    OnewayCallTestProxy *proxy = new OnewayCallTestProxy("OnewayCallTestService");

    DDS_Long lo1 = 10;       

    try
    {
        proxy->setLong(lo1);
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<setLong>: %s\n", ex.what());
        _exit(-1);
    }

    DDS_Long long_ret = 0;

    try
    {
        long_ret = proxy->getLong();

        if(long_ret != 10)
        {
            printf("TEST FAILED<getLong>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getLong>: %s\n", ex.what());
        _exit(-1);
    }

    DDS_Boolean bo1 = RTI_TRUE;       

    try
    {
        proxy->setBoolean(bo1);
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<setBoolean>: %s\n", ex.what());
        _exit(-1);
    }

    DDS_Boolean bo_ret = 0;

    try
    {
        bo_ret = proxy->getBoolean();

        if(bo_ret != RTI_TRUE)
        {
            printf("TEST FAILED<getBoolean>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getBoolean>: %s\n", ex.what());
        _exit(-1);
    }

    char *s1 = strdup("Ricardo");       

    try
    {
        proxy->setString(s1);
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<setString>: %s\n", ex.what());
        _exit(-1);
    }

    if(s1 != NULL) free(s1);

    char* s_ret = NULL;

    try
    {
        s_ret = proxy->getString();

        if(strcmp(s_ret, "Ricardo") != 0)
        {
            printf("TEST FAILED<getString>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getString>: %s\n", ex.what());
        _exit(-1);
    }

    if(s_ret != NULL) free(s_ret);

    Structure st1;
    Structure_initialize(&st1);
    st1.dato = 10;
    st1.message = strdup("Jaime");

    try
    {
        proxy->setStruct(st1);
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<setStruct>: %s\n", ex.what());
        _exit(-1);
    }

    Structure_finalize(&st1);

    Structure st_ret;
    Structure_initialize(&st_ret);

    try
    {
        st_ret = proxy->getStruct();

        if(st_ret.dato != 10 ||
                strcmp(st_ret.message, "Jaime") != 0)
        {
            printf("TEST FAILED<getStruct>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getStruct>: %s\n", ex.what());
        _exit(-1);
    }

	Structure_finalize(&st_ret);

    printf("TEST SUCCESFULLY\n");

    delete(proxy);

    _exit(0);
    return 0;
}
