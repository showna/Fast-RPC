/** 
 * Generated by DDSRPC                                                   *
 * Example client. Method params should be initialized before execution  *
 */

#include "StructTestProxy.h"
#include "StructTestRequestReplyPlugin.h"

int main(int argc, char **argv)
{
	StructTestProxy *proxy = new StructTestProxy();

	Envio *ev = EnvioPluginSupport_create_data();    
	ev->dato = 10;
	ev->message = DDS_String_dup("HOLA");
	Recepcion *duplicate_ret = RecepcionPluginSupport_create_data();       
	eProsima::DDSRPC::ReturnMessage  duplicateRetValue = eProsima::DDSRPC::OPERATION_SUCCESSFUL;        

	duplicateRetValue = proxy->duplicate(ev  , duplicate_ret  );

	if(duplicateRetValue != eProsima::DDSRPC::OPERATION_SUCCESSFUL ||
			duplicate_ret->devolucion != 10 ||
			strcmp(duplicate_ret->message, "HOLA") != 0 ||
			ev->dato != 10 ||
			strcmp(ev->message, "HOLA") != 0)
	{
		printf("TEST FAILED<duplicate>\n");
		_exit(-1);
	}

	EnvioPluginSupport_destroy_data(ev);    
	RecepcionPluginSupport_destroy_data(duplicate_ret);    

	Envio *ev1 = EnvioPluginSupport_create_data();    
	Envio *ev2 = EnvioPluginSupport_create_data();       
	ev1->dato = 10;
	ev1->message = DDS_String_dup("HOLA");
	ev2->dato = 20;
	ev2->message = DDS_String_dup("ADIOS");

	Recepcion *suma_ret = RecepcionPluginSupport_create_data();       
	eProsima::DDSRPC::ReturnMessage  sumaRetValue = eProsima::DDSRPC::OPERATION_SUCCESSFUL;        

	sumaRetValue = proxy->suma(ev1  , ev2  ,suma_ret  );

	if(sumaRetValue != eProsima::DDSRPC::OPERATION_SUCCESSFUL ||
			suma_ret->devolucion != 30 ||
			strcmp(suma_ret->message, "HOLAADIOS") != 0 ||
			ev1->dato != 10 ||
			strcmp(ev1->message, "HOLA") != 0 ||
			ev2->dato != 20 ||
			strcmp(ev2->message, "ADIOS") != 0)
	{
		printf("TEST FAILED<suma>\n");
		_exit(-1);
	}

	EnvioPluginSupport_destroy_data(ev1);    
	EnvioPluginSupport_destroy_data(ev2);    
	RecepcionPluginSupport_destroy_data(suma_ret);    

	printf("TEST SUCCESFULLY\n");

	delete(proxy);

	_exit(0);
	return 0;
}
