/** 
 * Generated by DDSRPC                                                   *
 * Example client. Method params should be initialized before execution  *
 */

#include "BasicTypeTestProxy.h"
#include "BasicTypeTestRequestReplyPlugin.h"
#include "exceptions/Exceptions.h"

int main(int argc, char **argv)
{
    BasicTypeTestProxy *proxy = new BasicTypeTestProxy();

    DDS_Octet  oc1 = 1;    
    DDS_Octet  oc2 = 2;    
    DDS_Octet  oc3 = 0;    
    DDS_Octet  getOctetRetValue = 0;       

    try
    {
        getOctetRetValue = proxy->getOctet(oc1, oc2, oc3);

        if(oc3 != 2 ||
                getOctetRetValue != 1 ||
                oc2 != 3 ||
                oc1 != 1)
        {
            printf("TEST FAILED<getOctet>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getOctet>: %s\n", ex.getMessage().c_str());
        _exit(-1);
    }

    DDS_Char  ch1 = 1;       
    DDS_Char  ch2 = 2;       
    DDS_Char  ch3 = 0;    
    DDS_Char  getCharRetValue = 0;       

    try
    {
        getCharRetValue = proxy->getChar(ch1, ch2, ch3);   

        if(ch3 != 2 ||
                getCharRetValue != 1 ||
                ch2 != 3 ||
                ch1 != 1)
        {
            printf("TEST FAILED<getChar>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getChar>: %s\n", ex.getMessage().c_str());
        _exit(-1);
    }

    DDS_Wchar  wch1 = 1;       
    DDS_Wchar  wch2 = 2;       
    DDS_Wchar  wch3 = 0; 
    DDS_Wchar  getWCharRetValue = 0;       

    try
    {
        getWCharRetValue = proxy->getWChar(wch1, wch2, wch3);

        if(wch3 != 2 ||
                getWCharRetValue != 1 ||
                wch2 != 3 ||
                wch1 != 1)
        {
            printf("TEST FAILED<getWChar>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getWChar>: %s\n", ex.getMessage().c_str());
        _exit(-1);
    }

    DDS_Short  sh1 = 1;       
    DDS_Short  sh2 = 2;       
    DDS_Short  sh3 = 0;    
    DDS_Short  getShortRetValue = 0;       

    try
    {
        getShortRetValue = proxy->getShort(sh1, sh2, sh3);

        if(sh3 != 2 ||
                getShortRetValue != 1 ||
                sh2 != 3 ||
                sh1 != 1)
        {
            printf("TEST FAILED<getShort>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getShort>: %s\n", ex.getMessage().c_str());
        _exit(-1);
    }

    DDS_UnsignedShort  ush1 = 1;       
    DDS_UnsignedShort  ush2 = 2;       
    DDS_UnsignedShort  ush3 = 0;    
    DDS_UnsignedShort  getUShortRetValue = 0;       

    try
    {
        getUShortRetValue = proxy->getUShort(ush1, ush2, ush3);

        if(ush3 != 2 ||
                getUShortRetValue != 1 ||
                ush2 != 3 ||
                ush1 != 1)
        {
            printf("TEST FAILED<getUShort>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getUShort>: %s\n", ex.getMessage().c_str());
        _exit(-1);
    }

    DDS_Long  lo1 = 1;       
    DDS_Long  lo2 = 2;       
    DDS_Long  lo3 = 0;    
    DDS_Long  getLongRetValue = 0;       

    try
    {
        getLongRetValue = proxy->getLong(lo1, lo2, lo3);

        if(lo3 != 2 ||
                getLongRetValue != 1 ||
                lo2 != 3 ||
                lo1 != 1)
        {
            printf("TEST FAILED<getLong>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getLong>: %s\n", ex.getMessage().c_str());
        _exit(-1);
    }

    DDS_UnsignedLong  ulo1 = 1;       
    DDS_UnsignedLong  ulo2 = 2;       
    DDS_UnsignedLong  ulo3 = 0;    
    DDS_UnsignedLong  getULongRetValue = 0;       

    try
    {
        getULongRetValue = proxy->getULong(ulo1, ulo2, ulo3);

        if(ulo3 != 2 ||
                getULongRetValue != 1 ||
                ulo2 != 3 ||
                ulo1 != 1)
        {
            printf("TEST FAILED<getULong>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getULong>: %s\n", ex.getMessage().c_str());
        _exit(-1);
    }

    DDS_LongLong  llo1 = 1;       
    DDS_LongLong  llo2 = 2;       
    DDS_LongLong  llo3 = 0;    
    DDS_LongLong  getLLongRetValue = 0;       

    try
    {
        getLLongRetValue = proxy->getLLong(llo1, llo2, llo3);

        if(llo3 != 2 ||
                getLLongRetValue != 1 ||
                llo2 != 3 ||
                llo1 != 1)
        {
            printf("TEST FAILED<getLLong>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getLLong>: %s\n", ex.getMessage().c_str());
        _exit(-1);
    }

    DDS_UnsignedLongLong  ullo1 = 1;       
    DDS_UnsignedLongLong  ullo2 = 2;       
    DDS_UnsignedLongLong  ullo3 = 0;    
    DDS_UnsignedLongLong  getULLongRetValue = 0;       

    try
    {
        getULLongRetValue = proxy->getULLong(ullo1, ullo2, ullo3);

        if(ullo3 != 2 ||
                getULLongRetValue != 1 ||
                ullo2 != 3 ||
                ullo1 != 1)
        {
            printf("TEST FAILED<getULLong>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getULLong>: %s\n", ex.getMessage().c_str());
        _exit(-1);
    }

    DDS_Float  fl1 = 1.0;       
    DDS_Float  fl2 = 2.0;       
    DDS_Float  fl3 = 0;    
    DDS_Float  getFloatRetValue = 0;       

    try
    {
        getFloatRetValue = proxy->getFloat(fl1, fl2, fl3);

        if(fl3 != 2.0 ||
                getFloatRetValue != 1.0 ||
                fl2 != 3.0 ||
                fl1 != 1.0)
        {
            printf("TEST FAILED<getFloat>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getFloat>: %s\n", ex.getMessage().c_str());
        _exit(-1);
    }

    DDS_Double  do1 = 1.0;       
    DDS_Double  do2 = 2.0;       
    DDS_Double  do3 = 0;    
    DDS_Double  getDoubleRetValue = 0;       

    try
    {
        getDoubleRetValue = proxy->getDouble(do1, do2, do3);

        if(do3 != 2.0 ||
                getDoubleRetValue != 1.0 ||
                do2 != 3.0 ||
                do1 != 1.0)
        {
            printf("TEST FAILED<getDouble>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getDouble>: %s\n", ex.getMessage().c_str());
        _exit(-1);
    }

    DDS_Boolean  bo1 = RTI_TRUE;       
    DDS_Boolean  bo2 = RTI_FALSE;       
    DDS_Boolean  bo3 = RTI_FALSE;    
    DDS_Boolean  getBooleanRetValue = RTI_FALSE;       

    try
    {
        getBooleanRetValue = proxy->getBoolean(bo1, bo2, bo3);

        if(bo3 != RTI_FALSE ||
                getBooleanRetValue != RTI_TRUE ||
                bo2 != RTI_TRUE ||
                bo1 != RTI_TRUE)
        {
            printf("TEST FAILED<getBoolean>: Wrong values\n");
            _exit(-1);
        }
    }
    catch(eProsima::DDSRPC::Exception &ex)
    {
        printf("TEST FAILED<getBoolean>: %s\n", ex.getMessage().c_str());
        _exit(-1);
    }

    printf("TEST SUCCESFULLY\n");

    delete(proxy);

    _exit(0);
    return 0;
}
