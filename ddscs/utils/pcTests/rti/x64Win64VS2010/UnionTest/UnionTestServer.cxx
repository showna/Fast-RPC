/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "UnionTestServer.h"
#include "transports/UDPTransport.h"
#include "transports/TCPTransport.h"
#include "exceptions/ServerException.h"
#include "UnionTestRequestReplyPlugin.h"

#include "UnionTestServerRPCSupport.h"

UnionTestServer::UnionTestServer(eProsima::DDSRPC::ServerStrategy *strategy,
    int domainId) :
    Server(strategy, NULL, domainId)
{
    _impl = new UnionTestServerImpl();

    createRPCs();
}

UnionTestServer::UnionTestServer(eProsima::DDSRPC::ServerStrategy *strategy,
    eProsima::DDSRPC::Transport *transport, int domainId) :
    Server(strategy, transport, domainId)
{
    _impl = new UnionTestServerImpl();
    
    createRPCs();
}

UnionTestServer::~UnionTestServer()
{
    delete _impl;    
}

void UnionTestServer::createRPCs()
{
    this->setRPC(new getEmpleadoServerRPC("getEmpleado", this,
                getEmpleadoRequestUtils::registerType(getParticipant()),
                getEmpleadoReplyUtils::registerType(getParticipant()),
                &UnionTestServer::getEmpleado, getParticipant()));

}

void UnionTestServer::getEmpleado(eProsima::DDSRPC::Server *server, void *requestData, eProsima::DDSRPC::ServerRPC *service) 
{ 
    UnionTestServer *srv = dynamic_cast<UnionTestServer*>(server);
    Empleado em1;
        
    Empleado em2;
        
    Empleado em3;
    memset(&em3, 0, sizeof(Empleado));    
    Empleado getEmpleado_ret;
    memset(&getEmpleado_ret, 0, sizeof(Empleado));       
    getEmpleadoReply replyData;
    
    Empleado_initialize(&em2);    

    getEmpleadoRequestUtils::extractTypeData(*(getEmpleadoRequest*)requestData, em1, em2);

    try
    {
        getEmpleado_ret = srv->_impl->getEmpleado(em1, em2, em3);

        getEmpleadoReplyUtils::setTypeData(replyData, em2, em3, getEmpleado_ret);

        service->sendReply(requestData, &replyData, eProsima::DDSRPC::OPERATION_SUCCESSFUL);
    }
    catch(eProsima::DDSRPC::ServerException)
    {
        service->sendReply(requestData, NULL, eProsima::DDSRPC::SERVER_ERROR);
    }
    
    getEmpleadoRequestTypeSupport::delete_data((getEmpleadoRequest*)requestData);
    
    Empleado_finalize(&getEmpleado_ret);    
    Empleado_finalize(&em2);    
    Empleado_finalize(&em3);    
}