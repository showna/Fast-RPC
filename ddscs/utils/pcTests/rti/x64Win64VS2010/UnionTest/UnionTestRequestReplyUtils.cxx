/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "UnionTestRequestReplyUtils.h"
#include "UnionTestRequestReplyPlugin.h"


const char* getEmpleadoRequestUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getEmpleadoRequestTypeSupport::get_type_name();

        if(getEmpleadoRequestTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

getEmpleadoRequest* getEmpleadoRequestUtils::createTypeData(/*in*/ const Empleado* em1, /*inout*/ const Empleado* em2)
{
    getEmpleadoRequest* instance = getEmpleadoRequestTypeSupport::create_data();

    EmpleadoPluginSupport_copy_data(&instance->em1, em1);
    EmpleadoPluginSupport_copy_data(&instance->em2, em2);
    
    
    return instance;
}

void getEmpleadoRequestUtils::extractTypeData(getEmpleadoRequest* data , /*in*/ Empleado* &em1, /*inout*/ Empleado* &em2)
{
    em1 = &data->em1;
    EmpleadoPluginSupport_copy_data(em2, &data->em2);
    
    
}


const char* getEmpleadoReplyUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getEmpleadoReplyTypeSupport::get_type_name();

        if(getEmpleadoReplyTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

getEmpleadoReply* getEmpleadoReplyUtils::createTypeData(/*inout*/ const Empleado* em2, /*out*/ const Empleado* em3, /*out*/ const Empleado* getEmpleado_ret)
{
    getEmpleadoReply* instance = getEmpleadoReplyTypeSupport::create_data();

    EmpleadoPluginSupport_copy_data(&instance->em2, em2);
    EmpleadoPluginSupport_copy_data(&instance->em3, em3);
    
    EmpleadoPluginSupport_copy_data(&instance->getEmpleado_ret, getEmpleado_ret);            
    return instance;
}

void getEmpleadoReplyUtils::extractTypeData(getEmpleadoReply* data , /*inout*/ Empleado* &em2, /*out*/ Empleado* &em3, /*out*/ Empleado* &getEmpleado_ret)
{
    EmpleadoPluginSupport_copy_data(em2, &data->em2);
    EmpleadoPluginSupport_copy_data(em3, &data->em3);
    
    EmpleadoPluginSupport_copy_data(getEmpleado_ret, &data->getEmpleado_ret);            
}

 