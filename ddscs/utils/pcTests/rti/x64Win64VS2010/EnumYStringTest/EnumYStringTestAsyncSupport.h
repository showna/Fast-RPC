#ifndef _EnumYStringTest_ASYNC_SUPPORT_H_
#define _EnumYStringTest_ASYNC_SUPPORT_H_

/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "client/AsyncTask.h"


class EnumYStringTest_getEnumTask : public eProsima::DDSRPC::AsyncTask
{
    public:

        /// \brief The default constructor.
        EnumYStringTest_getEnumTask(EnumYStringTest_getEnum &obj,
           eProsima::DDSRPC::Client *client);

        /// \brief The default destructor.
        virtual ~EnumYStringTest_getEnumTask();
        
        virtual void execute(eProsima::DDSRPC::ReturnMessage);
        
        EnumYStringTest_getEnum& getObject();
        
        private:
        
           EnumYStringTest_getEnum &m_obj;
};

class EnumYStringTest_getStringTask : public eProsima::DDSRPC::AsyncTask
{
    public:

        /// \brief The default constructor.
        EnumYStringTest_getStringTask(EnumYStringTest_getString &obj,
           eProsima::DDSRPC::Client *client);

        /// \brief The default destructor.
        virtual ~EnumYStringTest_getStringTask();
        
        virtual void execute(eProsima::DDSRPC::ReturnMessage);
        
        EnumYStringTest_getString& getObject();
        
        private:
        
           EnumYStringTest_getString &m_obj;
};

class EnumYStringTest_getStringBoundedTask : public eProsima::DDSRPC::AsyncTask
{
    public:

        /// \brief The default constructor.
        EnumYStringTest_getStringBoundedTask(EnumYStringTest_getStringBounded &obj,
           eProsima::DDSRPC::Client *client);

        /// \brief The default destructor.
        virtual ~EnumYStringTest_getStringBoundedTask();
        
        virtual void execute(eProsima::DDSRPC::ReturnMessage);
        
        EnumYStringTest_getStringBounded& getObject();
        
        private:
        
           EnumYStringTest_getStringBounded &m_obj;
};

#endif // _EnumYStringTest_ASYNC_SUPPORT_H_