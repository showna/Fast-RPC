#ifndef _EnumYStringTest_PROXY_H_
#define _EnumYStringTest_PROXY_H_

/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "client/Client.h"
#include "EnumYStringTestRequestReplyUtils.h"
#include "EnumYStringTestClientRPCSupport.h"

class EnumYStringTest_getEnum
{
    public:
        virtual void getEnum(/*inout*/ const Valores v2, /*out*/ const Valores v3, /*out*/ const Valores getEnum_ret)
        {
        }
   
        virtual void error(eProsima::DDSRPC::ReturnMessage message)
        {
        }
};
class EnumYStringTest_getString
{
    public:
        virtual void getString(/*inout*/ const char* s2, /*out*/ const char* s3, /*out*/ const char* getString_ret)
        {
        }
   
        virtual void error(eProsima::DDSRPC::ReturnMessage message)
        {
        }
};
class EnumYStringTest_getStringBounded
{
    public:
        virtual void getStringBounded(/*inout*/ const char* sb2, /*out*/ const char* sb3, /*out*/ const char* getStringBounded_ret)
        {
        }
   
        virtual void error(eProsima::DDSRPC::ReturnMessage message)
        {
        }
};

/**
 * \brief This class implements a specific client's proxy for the defined interface by user.
 */
class EnumYStringTestProxyH : public eProsima::DDSRPC::Client
{
    public:

        /**
         * \brief Default constructor. The client's proxy has to know what network transport
         *        it should use.
         *
         * \param transport The network transport that client's proxy has to use. Cannot be NULL.
         * \param domainId The DDS domain that DDS will use to work. Default value: 0
         * \param timeout Timeout used in each call to remotely procedures.
         *        If the call exceeds the time, the call return a eProsima::DDSRPC::SERVER_TIMEOUT.
         */
        EnumYStringTestProxyH(eProsima::DDSRPC::Transport *transport, int domainId = 0, long timeout = 10000);

        /// \brief The default destructor.
        virtual ~EnumYStringTestProxyH();
        
         
        eProsima::DDSRPC::ReturnMessage getEnum(/*in*/ const Valores v1, /*inout*/ Valores &v2, /*out*/ Valores &v3, /*out*/ Valores &getEnum_ret);
         
        eProsima::DDSRPC::ReturnMessage getString(/*in*/ const char* s1, /*inout*/ char* &s2, /*out*/ char* &s3, /*out*/ char* &getString_ret);
         
        eProsima::DDSRPC::ReturnMessage getStringBounded(/*in*/ const char* sb1, /*inout*/ char* &sb2, /*out*/ char* &sb3, /*out*/ char* &getStringBounded_ret);
        
         
        eProsima::DDSRPC::ReturnMessage getEnum_async(EnumYStringTest_getEnum &obj, /*in*/ const Valores v1, /*inout*/ const Valores v2);
         
        eProsima::DDSRPC::ReturnMessage getString_async(EnumYStringTest_getString &obj, /*in*/ const char* s1, /*inout*/ const char* s2);
         
        eProsima::DDSRPC::ReturnMessage getStringBounded_async(EnumYStringTest_getStringBounded &obj, /*in*/ const char* sb1, /*inout*/ const char* sb2);
        
    private:
        eProsima::DDSRPC::ClientRPC *getEnum_Service;
        eProsima::DDSRPC::ClientRPC *getString_Service;
        eProsima::DDSRPC::ClientRPC *getStringBounded_Service; 
};

/**
 * \brief This class implements a specific client's proxy for the defined interface by user.
 *        This client's proxy uses the UDPv4 transport.
 */
class EnumYStringTestProxy : public EnumYStringTestProxyH
{
    public:
    
        /**
         * \brief Default constructor.
         *
         * \param domainId The DDS domain that DDS will use to work. Default value: 0
         * \param timeout Timeout used in each call to remotely procedures.
         *        If the call exceeds the time, the call return a eProsima::DDSRPC::SERVER_TIMEOUT.
         */
        EnumYStringTestProxy(int domainId = 0, long timeout = 10000);
        
        virtual ~EnumYStringTestProxy();
};

/**
 * \brief This class implements a specific client's proxy for the defined interface by user.
 *        This client's proxy uses the TCPv4 transport.
 */
class EnumYStringTestWANProxy : public EnumYStringTestProxyH
{
    public:
    
        /**
         * \brief Default constructor.
         *
         * \param to_connect Public address and port for the server. By example: "218.18.3.133:7600"
         * \param domainId The DDS domain that DDS will use to work. Default value: 0
         * \param timeout Timeout used in each call to remotely procedures.
         *        If the call exceeds the time, the call return a eProsima::DDSRPC::SERVER_TIMEOUT.
         */
        EnumYStringTestWANProxy(const char *to_connect, int domainId = 0, long timeout = 10000);
        
        virtual ~EnumYStringTestWANProxy();
};

#endif // _EnumYStringTest_PROXY_H_