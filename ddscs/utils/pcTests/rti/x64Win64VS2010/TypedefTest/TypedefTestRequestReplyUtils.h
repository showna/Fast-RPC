
#ifndef _TypedefTest_REQUEST_REPLY_UTILS_H_
#define _TypedefTest_REQUEST_REPLY_UTILS_H_

/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "TypedefTestRequestReplySupport.h"

#include "ndds_namespace_cpp.h"


class getLargoRequestUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getLargoRequest* createTypeData(/*in*/ const largo l1);
        
        static void extractTypeData(getLargoRequest* data, /*in*/ largo &l1);
};


class getLargoReplyUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getLargoReply* createTypeData(/*out*/ const largo l2, /*out*/ const largo getLargo_ret);
        
        static void extractTypeData(getLargoReply* data, /*out*/ largo &l2, /*out*/ largo &getLargo_ret);
};


class getLarguisimoRequestUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getLarguisimoRequest* createTypeData(/*in*/ const larguisimo ll1);
        
        static void extractTypeData(getLarguisimoRequest* data, /*in*/ larguisimo &ll1);
};


class getLarguisimoReplyUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getLarguisimoReply* createTypeData(/*out*/ const larguisimo ll2, /*out*/ const larguisimo getLarguisimo_ret);
        
        static void extractTypeData(getLarguisimoReply* data, /*out*/ larguisimo &ll2, /*out*/ larguisimo &getLarguisimo_ret);
};


class getDatosDefRequestUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getDatosDefRequest* createTypeData(/*in*/ const DatosDef* d1);
        
        static void extractTypeData(getDatosDefRequest* data, /*in*/ DatosDef* &d1);
};


class getDatosDefReplyUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getDatosDefReply* createTypeData(/*out*/ const DatosDef* d2, /*out*/ const DatosDef* getDatosDef_ret);
        
        static void extractTypeData(getDatosDefReply* data, /*out*/ DatosDef* &d2, /*out*/ DatosDef* &getDatosDef_ret);
};


class getDatosDefondoRequestUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getDatosDefondoRequest* createTypeData(/*in*/ const DatosDefondo* dd1);
        
        static void extractTypeData(getDatosDefondoRequest* data, /*in*/ DatosDefondo* &dd1);
};


class getDatosDefondoReplyUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getDatosDefondoReply* createTypeData(/*out*/ const DatosDefondo* dd2, /*out*/ const DatosDefondo* getDatosDefondo_ret);
        
        static void extractTypeData(getDatosDefondoReply* data, /*out*/ DatosDefondo* &dd2, /*out*/ DatosDefondo* &getDatosDefondo_ret);
};


class getCadenaRequestUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getCadenaRequest* createTypeData(/*in*/ const cadena c1);
        
        static void extractTypeData(getCadenaRequest* data, /*in*/ cadena &c1);
};


class getCadenaReplyUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getCadenaReply* createTypeData(/*out*/ const cadena c2, /*out*/ const cadena getCadena_ret);
        
        static void extractTypeData(getCadenaReply* data, /*out*/ cadena &c2, /*out*/ cadena &getCadena_ret);
};


class getCorreaRequestUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getCorreaRequest* createTypeData(/*in*/ const correa cc1);
        
        static void extractTypeData(getCorreaRequest* data, /*in*/ correa &cc1);
};


class getCorreaReplyUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getCorreaReply* createTypeData(/*out*/ const correa cc2, /*out*/ const correa getCorrea_ret);
        
        static void extractTypeData(getCorreaReply* data, /*out*/ correa &cc2, /*out*/ correa &getCorrea_ret);
};

 
#endif // _TypedefTest_REQUEST_REPLY_UTILS_H_
