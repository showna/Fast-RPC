/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "TypedefTestRequestReplyUtils.h"
#include "TypedefTestRequestReplyPlugin.h"


const char* getLargoRequestUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getLargoRequestTypeSupport::get_type_name();

        if(getLargoRequestTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

void getLargoRequestUtils::setTypeData(getLargoRequest& instance, /*in*/ largo l1)
{
    instance.l1 = l1;
    
}

void getLargoRequestUtils::extractTypeData(getLargoRequest& data, /*in*/ largo& l1)
{
    l1 = data.l1;  
    
}


const char* getLargoReplyUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getLargoReplyTypeSupport::get_type_name();

        if(getLargoReplyTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

void getLargoReplyUtils::setTypeData(getLargoReply& instance, /*out*/ largo l2, /*out*/ largo getLargo_ret)
{
    instance.l2 = l2;
    instance.getLargo_ret = getLargo_ret;            
}

void getLargoReplyUtils::extractTypeData(getLargoReply& data, eProsima::DDSRPC::ReturnMessage& retcode, /*out*/ largo& l2, /*out*/ largo& getLargo_ret)
{
retcode = (eProsima::DDSRPC::ReturnMessage)data.ddsrpcRetCode;
    l2 = data.l2;  
    getLargo_ret = data.getLargo_ret;            
}


const char* getLarguisimoRequestUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getLarguisimoRequestTypeSupport::get_type_name();

        if(getLarguisimoRequestTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

void getLarguisimoRequestUtils::setTypeData(getLarguisimoRequest& instance, /*in*/ larguisimo ll1)
{
    instance.ll1 = ll1;
    
}

void getLarguisimoRequestUtils::extractTypeData(getLarguisimoRequest& data, /*in*/ larguisimo& ll1)
{
    ll1 = data.ll1;  
    
}


const char* getLarguisimoReplyUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getLarguisimoReplyTypeSupport::get_type_name();

        if(getLarguisimoReplyTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

void getLarguisimoReplyUtils::setTypeData(getLarguisimoReply& instance, /*out*/ larguisimo ll2, /*out*/ larguisimo getLarguisimo_ret)
{
    instance.ll2 = ll2;
    instance.getLarguisimo_ret = getLarguisimo_ret;            
}

void getLarguisimoReplyUtils::extractTypeData(getLarguisimoReply& data, eProsima::DDSRPC::ReturnMessage& retcode, /*out*/ larguisimo& ll2, /*out*/ larguisimo& getLarguisimo_ret)
{
retcode = (eProsima::DDSRPC::ReturnMessage)data.ddsrpcRetCode;
    ll2 = data.ll2;  
    getLarguisimo_ret = data.getLarguisimo_ret;            
}


const char* getDatosDefRequestUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getDatosDefRequestTypeSupport::get_type_name();

        if(getDatosDefRequestTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

void getDatosDefRequestUtils::setTypeData(getDatosDefRequest& instance, /*in*/ const DatosDef& d1)
{
    instance.d1 = d1;
    
}

void getDatosDefRequestUtils::extractTypeData(getDatosDefRequest& data, /*in*/ DatosDef& d1)
{
    d1 = data.d1;  
    
}


const char* getDatosDefReplyUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getDatosDefReplyTypeSupport::get_type_name();

        if(getDatosDefReplyTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

void getDatosDefReplyUtils::setTypeData(getDatosDefReply& instance, /*out*/ const DatosDef& d2, /*out*/ const DatosDef& getDatosDef_ret)
{
    instance.d2 = d2;
    instance.getDatosDef_ret = getDatosDef_ret;            
}

void getDatosDefReplyUtils::extractTypeData(getDatosDefReply& data, eProsima::DDSRPC::ReturnMessage& retcode, /*out*/ DatosDef& d2, /*out*/ DatosDef& getDatosDef_ret)
{
retcode = (eProsima::DDSRPC::ReturnMessage)data.ddsrpcRetCode;
    d2 = data.d2;  
    getDatosDef_ret = data.getDatosDef_ret;            
}


const char* getDatosDefondoRequestUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getDatosDefondoRequestTypeSupport::get_type_name();

        if(getDatosDefondoRequestTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

void getDatosDefondoRequestUtils::setTypeData(getDatosDefondoRequest& instance, /*in*/ const DatosDefondo& dd1)
{
    instance.dd1 = dd1;
    
}

void getDatosDefondoRequestUtils::extractTypeData(getDatosDefondoRequest& data, /*in*/ DatosDefondo& dd1)
{
    dd1 = data.dd1;  
    
}


const char* getDatosDefondoReplyUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getDatosDefondoReplyTypeSupport::get_type_name();

        if(getDatosDefondoReplyTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

void getDatosDefondoReplyUtils::setTypeData(getDatosDefondoReply& instance, /*out*/ const DatosDefondo& dd2, /*out*/ const DatosDefondo& getDatosDefondo_ret)
{
    instance.dd2 = dd2;
    instance.getDatosDefondo_ret = getDatosDefondo_ret;            
}

void getDatosDefondoReplyUtils::extractTypeData(getDatosDefondoReply& data, eProsima::DDSRPC::ReturnMessage& retcode, /*out*/ DatosDefondo& dd2, /*out*/ DatosDefondo& getDatosDefondo_ret)
{
retcode = (eProsima::DDSRPC::ReturnMessage)data.ddsrpcRetCode;
    dd2 = data.dd2;  
    getDatosDefondo_ret = data.getDatosDefondo_ret;            
}


const char* getCadenaRequestUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getCadenaRequestTypeSupport::get_type_name();

        if(getCadenaRequestTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

void getCadenaRequestUtils::setTypeData(getCadenaRequest& instance, /*in*/ cadena c1)
{
    instance.c1 = c1;
    
}

void getCadenaRequestUtils::extractTypeData(getCadenaRequest& data, /*in*/ cadena& c1)
{
    c1 = data.c1;  
    
}


const char* getCadenaReplyUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getCadenaReplyTypeSupport::get_type_name();

        if(getCadenaReplyTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

void getCadenaReplyUtils::setTypeData(getCadenaReply& instance, /*out*/ cadena c2, /*out*/ cadena getCadena_ret)
{
    instance.c2 = c2;
    instance.getCadena_ret = getCadena_ret;            
}

void getCadenaReplyUtils::extractTypeData(getCadenaReply& data, eProsima::DDSRPC::ReturnMessage& retcode, /*out*/ cadena& c2, /*out*/ cadena& getCadena_ret)
{
retcode = (eProsima::DDSRPC::ReturnMessage)data.ddsrpcRetCode;
    c2 = data.c2;  
    getCadena_ret = data.getCadena_ret;            
}


const char* getCorreaRequestUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getCorreaRequestTypeSupport::get_type_name();

        if(getCorreaRequestTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

void getCorreaRequestUtils::setTypeData(getCorreaRequest& instance, /*in*/ correa cc1)
{
    instance.cc1 = cc1;
    
}

void getCorreaRequestUtils::extractTypeData(getCorreaRequest& data, /*in*/ correa& cc1)
{
    cc1 = data.cc1;  
    
}


const char* getCorreaReplyUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = getCorreaReplyTypeSupport::get_type_name();

        if(getCorreaReplyTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

void getCorreaReplyUtils::setTypeData(getCorreaReply& instance, /*out*/ correa cc2, /*out*/ correa getCorrea_ret)
{
    instance.cc2 = cc2;
    instance.getCorrea_ret = getCorrea_ret;            
}

void getCorreaReplyUtils::extractTypeData(getCorreaReply& data, eProsima::DDSRPC::ReturnMessage& retcode, /*out*/ correa& cc2, /*out*/ correa& getCorrea_ret)
{
retcode = (eProsima::DDSRPC::ReturnMessage)data.ddsrpcRetCode;
    cc2 = data.cc2;  
    getCorrea_ret = data.getCorrea_ret;            
}

 