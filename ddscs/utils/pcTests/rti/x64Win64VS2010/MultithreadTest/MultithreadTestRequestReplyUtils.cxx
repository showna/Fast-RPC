/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "MultithreadTestRequestReplyUtils.h"
#include "MultithreadTestRequestReplyPlugin.h"


const char* testRequestUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = testRequestTypeSupport::get_type_name();

        if(testRequestTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

testRequest* testRequestUtils::createTypeData(/*in*/ const Dato* dato1)
{
    testRequest* instance = testRequestTypeSupport::create_data();

    DatoPluginSupport_copy_data(&instance->dato1, dato1);
    
    
    return instance;
}

void testRequestUtils::extractTypeData(testRequest* data , /*in*/ Dato* &dato1)
{
    dato1 = &data->dato1;
    
    
}


const char* testReplyUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = testReplyTypeSupport::get_type_name();

        if(testReplyTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

testReply* testReplyUtils::createTypeData(/*out*/ const Dato* dato2, /*out*/ const DDS_Long test_ret)
{
    testReply* instance = testReplyTypeSupport::create_data();

    DatoPluginSupport_copy_data(&instance->dato2, dato2);
    
    instance->test_ret = test_ret;            
    return instance;
}

void testReplyUtils::extractTypeData(testReply* data , /*out*/ Dato* &dato2, /*out*/ DDS_Long &test_ret)
{
    DatoPluginSupport_copy_data(dato2, &data->dato2);
    
    test_ret = data->test_ret;            
}

 