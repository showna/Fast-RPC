#ifndef _TypedefTest_ASYNC_SUPPORT_H_
#define _TypedefTest_ASYNC_SUPPORT_H_

/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "client/AsyncTask.h"


class TypedefTest_getLargoTask : public eProsima::DDSRPC::AsyncTask
{
    public:

        /// \brief The default constructor.
        TypedefTest_getLargoTask(TypedefTest_getLargoCallbackHandler &obj,
           eProsima::DDSRPC::Client *client);

        /// \brief The default destructor.
        virtual ~TypedefTest_getLargoTask();
        
        virtual void execute();
        
        virtual void on_exception(const eProsima::DDSRPC::SystemException &ex);
        
        TypedefTest_getLargoCallbackHandler& getObject();
        
        void* getReplyInstance();
        
        private:
        
           TypedefTest_getLargoCallbackHandler &m_obj;
           
           TypedefTest_getLargoReply m_reply;
};

class TypedefTest_getLarguisimoTask : public eProsima::DDSRPC::AsyncTask
{
    public:

        /// \brief The default constructor.
        TypedefTest_getLarguisimoTask(TypedefTest_getLarguisimoCallbackHandler &obj,
           eProsima::DDSRPC::Client *client);

        /// \brief The default destructor.
        virtual ~TypedefTest_getLarguisimoTask();
        
        virtual void execute();
        
        virtual void on_exception(const eProsima::DDSRPC::SystemException &ex);
        
        TypedefTest_getLarguisimoCallbackHandler& getObject();
        
        void* getReplyInstance();
        
        private:
        
           TypedefTest_getLarguisimoCallbackHandler &m_obj;
           
           TypedefTest_getLarguisimoReply m_reply;
};

class TypedefTest_getDatosDefTask : public eProsima::DDSRPC::AsyncTask
{
    public:

        /// \brief The default constructor.
        TypedefTest_getDatosDefTask(TypedefTest_getDatosDefCallbackHandler &obj,
           eProsima::DDSRPC::Client *client);

        /// \brief The default destructor.
        virtual ~TypedefTest_getDatosDefTask();
        
        virtual void execute();
        
        virtual void on_exception(const eProsima::DDSRPC::SystemException &ex);
        
        TypedefTest_getDatosDefCallbackHandler& getObject();
        
        void* getReplyInstance();
        
        private:
        
           TypedefTest_getDatosDefCallbackHandler &m_obj;
           
           TypedefTest_getDatosDefReply m_reply;
};

class TypedefTest_getDatosDefondoTask : public eProsima::DDSRPC::AsyncTask
{
    public:

        /// \brief The default constructor.
        TypedefTest_getDatosDefondoTask(TypedefTest_getDatosDefondoCallbackHandler &obj,
           eProsima::DDSRPC::Client *client);

        /// \brief The default destructor.
        virtual ~TypedefTest_getDatosDefondoTask();
        
        virtual void execute();
        
        virtual void on_exception(const eProsima::DDSRPC::SystemException &ex);
        
        TypedefTest_getDatosDefondoCallbackHandler& getObject();
        
        void* getReplyInstance();
        
        private:
        
           TypedefTest_getDatosDefondoCallbackHandler &m_obj;
           
           TypedefTest_getDatosDefondoReply m_reply;
};

class TypedefTest_getCadenaTask : public eProsima::DDSRPC::AsyncTask
{
    public:

        /// \brief The default constructor.
        TypedefTest_getCadenaTask(TypedefTest_getCadenaCallbackHandler &obj,
           eProsima::DDSRPC::Client *client);

        /// \brief The default destructor.
        virtual ~TypedefTest_getCadenaTask();
        
        virtual void execute();
        
        virtual void on_exception(const eProsima::DDSRPC::SystemException &ex);
        
        TypedefTest_getCadenaCallbackHandler& getObject();
        
        void* getReplyInstance();
        
        private:
        
           TypedefTest_getCadenaCallbackHandler &m_obj;
           
           TypedefTest_getCadenaReply m_reply;
};

class TypedefTest_getCorreaTask : public eProsima::DDSRPC::AsyncTask
{
    public:

        /// \brief The default constructor.
        TypedefTest_getCorreaTask(TypedefTest_getCorreaCallbackHandler &obj,
           eProsima::DDSRPC::Client *client);

        /// \brief The default destructor.
        virtual ~TypedefTest_getCorreaTask();
        
        virtual void execute();
        
        virtual void on_exception(const eProsima::DDSRPC::SystemException &ex);
        
        TypedefTest_getCorreaCallbackHandler& getObject();
        
        void* getReplyInstance();
        
        private:
        
           TypedefTest_getCorreaCallbackHandler &m_obj;
           
           TypedefTest_getCorreaReply m_reply;
};

#endif // _TypedefTest_ASYNC_SUPPORT_H_