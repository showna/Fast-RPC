/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "UnionTestRequestReplyUtils.h"
#include "UnionTestRequestReplyPlugin.h"


const char* UnionTest_getEmpleadoRequestUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = UnionTest_getEmpleadoRequestTypeSupport::get_type_name();

        if(UnionTest_getEmpleadoRequestTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

void UnionTest_getEmpleadoRequestUtils::setTypeData(UnionTest_getEmpleadoRequest& instance, /*in*/ const Empleado& em1, /*inout*/ const Empleado& em2)
{
    instance.em1 = em1;
    instance.em2 = em2;
    
}

void UnionTest_getEmpleadoRequestUtils::extractTypeData(UnionTest_getEmpleadoRequest& data, /*in*/ Empleado& em1, /*inout*/ Empleado& em2)
{
    em1 = data.em1;
    EmpleadoPluginSupport_copy_data(&em2, &data.em2);  
    
}


const char* UnionTest_getEmpleadoReplyUtils::registerType(DDS::DomainParticipant *clientParticipant)
{
    const char *typeName = NULL;

    if(clientParticipant != NULL)
    {
        typeName = UnionTest_getEmpleadoReplyTypeSupport::get_type_name();

        if(UnionTest_getEmpleadoReplyTypeSupport::register_type(clientParticipant, typeName) != DDS::RETCODE_OK)
        {
            return NULL;
        }
    }

    return typeName;
}

void UnionTest_getEmpleadoReplyUtils::setTypeData(UnionTest_getEmpleadoReply& instance, /*inout*/ const Empleado& em2, /*out*/ const Empleado& em3, /*out*/ const Empleado& getEmpleado_ret)
{
    instance.em2 = em2;
    instance.em3 = em3;
    instance.getEmpleado_ret = getEmpleado_ret;            
}

void UnionTest_getEmpleadoReplyUtils::extractTypeData(UnionTest_getEmpleadoReply& data, eProsima::DDSRPC::ReturnMessage& retcode, /*inout*/ Empleado& em2, /*out*/ Empleado& em3, /*out*/ Empleado& getEmpleado_ret)
{
retcode = (eProsima::DDSRPC::ReturnMessage)data.header.ddsrpcRetCode;
    Empleado_finalize(&em2);em2 = data.em2;
    em3 = data.em3;  
    getEmpleado_ret = data.getEmpleado_ret;            
}

 