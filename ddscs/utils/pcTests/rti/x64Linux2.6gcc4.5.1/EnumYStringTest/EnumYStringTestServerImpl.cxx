/** 
 * Generated by DDSRPC                                              *
 * Empty interface implementation to be filled with your own code.  *
 */

#include "EnumYStringTestServerImpl.h"

Valores EnumYStringTestServerImpl::getEnum(/*in*/ Valores v1, /*inout*/ Valores& v2, /*out*/ Valores& v3) 
{
    Valores  returnedValue = VALOR1;    

    v3 = v2;
    returnedValue = v1;
    v2 = v1;

    return returnedValue;
} 

char* EnumYStringTestServerImpl::getString(/*in*/ char* s1, /*inout*/ char*& s2, /*out*/ char*& s3) 
{
    char* returnedValue;

    s3 = DDS::String_dup(s2);
    returnedValue = DDS::String_dup(s1);
    DDS::String_free(s2);
    s2 = DDS::String_alloc(strlen(s1) + strlen(s3) + 1);
    snprintf(s2, strlen(s1) + strlen(s3) + 1, "%s%s", s1, s3);

    return returnedValue;
} 

char* EnumYStringTestServerImpl::getStringBounded(/*in*/ char* sb1, /*inout*/ char*& sb2, /*out*/ char*& sb3) 
{
    char* returnedValue;

    sb3 = DDS::String_dup(sb2);
    returnedValue = DDS::String_dup(sb1);
    DDS::String_free(sb2);
    sb2 = DDS::String_alloc(strlen(sb1) + strlen(sb3) + 1);
    snprintf(sb2, strlen(sb1) + strlen(sb3) + 1, "%s%s", sb1, sb3);

    return returnedValue;
} 
