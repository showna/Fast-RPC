#ifndef _EnumYStringTest_ASYNC_SUPPORT_H_
#define _EnumYStringTest_ASYNC_SUPPORT_H_

/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "client/AsyncTask.h"


class EnumYStringTest_getEnumTask : public eProsima::DDSRPC::AsyncTask
{
    public:

        /// \brief The default constructor.
        EnumYStringTest_getEnumTask(EnumYStringTest_getEnumCallbackHandler &obj,
           eProsima::DDSRPC::Client *client);

        /// \brief The default destructor.
        virtual ~EnumYStringTest_getEnumTask();
        
        virtual void execute();
        
        virtual void on_exception(const eProsima::DDSRPC::SystemException &ex);
        
        EnumYStringTest_getEnumCallbackHandler& getObject();
        
        void* getReplyInstance();
        
        private:
        
           EnumYStringTest_getEnumCallbackHandler &m_obj;
           
           EnumYStringTest_getEnumReply m_reply;
};

class EnumYStringTest_getStringTask : public eProsima::DDSRPC::AsyncTask
{
    public:

        /// \brief The default constructor.
        EnumYStringTest_getStringTask(EnumYStringTest_getStringCallbackHandler &obj,
           eProsima::DDSRPC::Client *client);

        /// \brief The default destructor.
        virtual ~EnumYStringTest_getStringTask();
        
        virtual void execute();
        
        virtual void on_exception(const eProsima::DDSRPC::SystemException &ex);
        
        EnumYStringTest_getStringCallbackHandler& getObject();
        
        void* getReplyInstance();
        
        private:
        
           EnumYStringTest_getStringCallbackHandler &m_obj;
           
           EnumYStringTest_getStringReply m_reply;
};

class EnumYStringTest_getStringBoundedTask : public eProsima::DDSRPC::AsyncTask
{
    public:

        /// \brief The default constructor.
        EnumYStringTest_getStringBoundedTask(EnumYStringTest_getStringBoundedCallbackHandler &obj,
           eProsima::DDSRPC::Client *client);

        /// \brief The default destructor.
        virtual ~EnumYStringTest_getStringBoundedTask();
        
        virtual void execute();
        
        virtual void on_exception(const eProsima::DDSRPC::SystemException &ex);
        
        EnumYStringTest_getStringBoundedCallbackHandler& getObject();
        
        void* getReplyInstance();
        
        private:
        
           EnumYStringTest_getStringBoundedCallbackHandler &m_obj;
           
           EnumYStringTest_getStringBoundedReply m_reply;
};

#endif // _EnumYStringTest_ASYNC_SUPPORT_H_