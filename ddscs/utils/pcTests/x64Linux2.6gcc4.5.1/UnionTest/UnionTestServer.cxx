/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "UnionTestServer.h"
#include "UnionTestRequestReplyPlugin.h"
#include "UnionTestServerRPCSupport.h"

UnionTestServer::UnionTestServer(int domainId, unsigned int threadCount,
const char *qosLibrary, const char *qosProfile) : Server(domainId, threadCount, qosLibrary, qosProfile)
{
    _impl = new UnionTestImpl();
    
    this->setRPC(new getEmpleadoServerRPC("getEmpleado", this,
                getEmpleadoRequestUtils::registerType(getParticipant()),
    "UnionTest_Library",
    "UnionTest_Profile",
                getEmpleadoReplyUtils::registerType(getParticipant()),
    "UnionTest_Library",
    "UnionTest_Profile",
                &UnionTestServer::getEmpleado, getParticipant()));

}
UnionTestServer::~UnionTestServer()
{
    delete _impl;    
}

void UnionTestServer::getEmpleado(eProsima::DDSRPC::Server *server, void *requestData, eProsima::DDSRPC::ServerRPC *service) 
{ 
    UnionTestServer *srv = (UnionTestServer*)server;
    Empleado *em1 = NULL;       
    Empleado *em2 = EmpleadoPluginSupport_create_data();       
    Empleado *em3 = EmpleadoPluginSupport_create_data();    
    Empleado *getEmpleado_ret = EmpleadoPluginSupport_create_data();       
    eProsima::DDSRPC::ReturnMessage  returnedValue ;        
    getEmpleadoReply *replyData = NULL;

    getEmpleadoRequestUtils::extractTypeData((getEmpleadoRequest*)requestData, em1  ,em2  );
                                         
    returnedValue = srv->_impl->getEmpleado(em1  ,em2  ,em3  , getEmpleado_ret  );
           
    replyData = getEmpleadoReplyUtils::createTypeData(em2  ,em3  , getEmpleado_ret  );
                                                  
    // sendReply takes care of deleting the data
    service->sendReply(requestData, replyData, returnedValue);
    
    getEmpleadoReplyTypeSupport::delete_data(replyData);
    getEmpleadoRequestTypeSupport::delete_data((getEmpleadoRequest*)requestData);
    
    EmpleadoPluginSupport_destroy_data(em2);    
    EmpleadoPluginSupport_destroy_data(em3);    
    EmpleadoPluginSupport_destroy_data(getEmpleado_ret);    
}