
#ifndef _TypedefTest_REQUEST_REPLY_UTILS_H_
#define _TypedefTest_REQUEST_REPLY_UTILS_H_

/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "TypedefTestRequestReplySupport.h"

#include "ndds_namespace_cpp.h"


class getLargoRequestUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getLargoRequest* createTypeData(largo l1);
        
        static void extractTypeData(getLargoRequest* data, largo &l1);
};


class getLargoReplyUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getLargoReply* createTypeData(largo l2, largo& returnedValue);
        
        static void extractTypeData(getLargoReply* data, largo &l2, largo& returnedValue);
};


class getLarguisimoRequestUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getLarguisimoRequest* createTypeData(larguisimo ll1);
        
        static void extractTypeData(getLarguisimoRequest* data, larguisimo &ll1);
};


class getLarguisimoReplyUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getLarguisimoReply* createTypeData(larguisimo ll2, larguisimo& returnedValue);
        
        static void extractTypeData(getLarguisimoReply* data, larguisimo &ll2, larguisimo& returnedValue);
};


class getDatosDefRequestUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getDatosDefRequest* createTypeData(DatosDef* d1);
        
        static void extractTypeData(getDatosDefRequest* data, DatosDef* &d1);
};


class getDatosDefReplyUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getDatosDefReply* createTypeData(DatosDef* d2, DatosDef*& returnedValue);
        
        static void extractTypeData(getDatosDefReply* data, DatosDef* &d2, DatosDef*& returnedValue);
};


class getDatosDefondoRequestUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getDatosDefondoRequest* createTypeData(DatosDefondo* dd1);
        
        static void extractTypeData(getDatosDefondoRequest* data, DatosDefondo* &dd1);
};


class getDatosDefondoReplyUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getDatosDefondoReply* createTypeData(DatosDefondo* dd2, DatosDefondo*& returnedValue);
        
        static void extractTypeData(getDatosDefondoReply* data, DatosDefondo* &dd2, DatosDefondo*& returnedValue);
};


class getCadenaRequestUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getCadenaRequest* createTypeData(cadena c1);
        
        static void extractTypeData(getCadenaRequest* data, cadena &c1);
};


class getCadenaReplyUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getCadenaReply* createTypeData(cadena c2, cadena& returnedValue);
        
        static void extractTypeData(getCadenaReply* data, cadena &c2, cadena& returnedValue);
};


class getCorreaRequestUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getCorreaRequest* createTypeData(correa cc1);
        
        static void extractTypeData(getCorreaRequest* data, correa &cc1);
};


class getCorreaReplyUtils
{
    public:

        static const char* registerType(DDS::DomainParticipant *clientParticipant);
         
        static getCorreaReply* createTypeData(correa cc2, correa& returnedValue);
        
        static void extractTypeData(getCorreaReply* data, correa &cc2, correa& returnedValue);
};

 
#endif // _TypedefTest_REQUEST_REPLY_UTILS_H_
