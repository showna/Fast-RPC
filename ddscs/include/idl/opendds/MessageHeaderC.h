// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6a_p13 ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be/be_codegen.cpp:135

#ifndef _TAO_IDL_MESSAGEHEADERC_H_
#define _TAO_IDL_MESSAGEHEADERC_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_type.cpp:269

struct Identification;

typedef
  TAO_Fixed_Var_T<
      Identification
    >
  Identification_var;

typedef
  Identification &
  Identification_out;

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_ch.cpp:57

struct  Identification
{
  typedef Identification_var _var_type;
  typedef Identification_out _out_type;
  
  static void _tao_any_destructor (void *);
  ::CORBA::ULong value_1;
  ::CORBA::ULong value_2;
  ::CORBA::ULong value_3;
  ::CORBA::ULong value_4;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:49

extern  ::CORBA::TypeCode_ptr const _tc_Identification;

// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:64

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:53


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Identification &); // copying version
 void operator<<= (::CORBA::Any &, Identification*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Identification *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Identification *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:54


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Identification &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Identification &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1228
#if defined (__ACE_INLINE__)
#include "MessageHeaderC.inl"
#endif /* defined INLINE */

#endif /* ifndef */


