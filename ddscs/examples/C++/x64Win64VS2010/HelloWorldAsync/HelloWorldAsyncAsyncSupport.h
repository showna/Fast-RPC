#ifndef _HelloWorldAsync_ASYNC_SUPPORT_H_
#define _HelloWorldAsync_ASYNC_SUPPORT_H_

/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "client/AsyncTask.h"


/**
 * \brief This class represents a asynchronous task created to wait the reply of the procedure sayHello from the server in an asynchronous call.
 */
class HelloWorldAsync_sayHelloTask : public eProsima::RPCDDS::AsyncTask
{
    public:

        /**
         * \brief The default constructor.
         *
         * \param obj Object that implements the callbacks that RPCDDS will call when
         *            the reply will be received or and exception will be launched.
         * \param client Pointer to the server's proxy. Cannot be NULL.
         */
        HelloWorldAsync_sayHelloTask(HelloWorldAsync_sayHelloCallbackHandler &obj,
           eProsima::RPCDDS::Client *client);

        /// \brief The default destructor.
        virtual ~HelloWorldAsync_sayHelloTask();
        
        virtual void execute();
        
        virtual void on_exception(const eProsima::RPCDDS::SystemException &ex);
        
        /**
         * \brief This function returns the object used by the task.
         *
         * \return The object that implements the callbacks.
         */
        HelloWorldAsync_sayHelloCallbackHandler& getObject();
        
        void* getReplyInstance();
        
        private:
        
           HelloWorldAsync_sayHelloCallbackHandler &m_obj;
           
           HelloWorldAsync_sayHelloReply m_reply;
};

#endif // _HelloWorldAsync_ASYNC_SUPPORT_H_