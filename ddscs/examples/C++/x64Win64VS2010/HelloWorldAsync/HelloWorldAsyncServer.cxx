/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */

#include "HelloWorldAsyncServer.h"
#include "HelloWorldAsyncRequestReplyPlugin.h"
#include "HelloWorldAsyncServerRPCSupport.h"

HelloWorldAsyncServer::HelloWorldAsyncServer(int domainId, unsigned int threadCount,
const char *qosLibrary, const char *qosProfile) : Server(domainId, threadCount, qosLibrary, qosProfile)
{
    _impl = new HelloWorldAsyncServerImpl();
    
    this->setRPC(new sumaServerRPC("suma", this,
                sumaRequestUtils::registerType(getParticipant()),
    NULL,
    NULL,
                sumaReplyUtils::registerType(getParticipant()),
    NULL,
    NULL,
                &HelloWorldAsyncServer::suma, getParticipant()));

}
HelloWorldAsyncServer::~HelloWorldAsyncServer()
{
    delete _impl;    
}

void HelloWorldAsyncServer::suma(eProsima::DDSRPC::Server *server, void *requestData, eProsima::DDSRPC::ServerRPC *service) 
{ 
    HelloWorldAsyncServer *srv = (HelloWorldAsyncServer*)server;
    DDS_Long  id1 ;    
    DDS_Long  id2 ;       
   
    DDS_Long  suma_ret ;       
    eProsima::DDSRPC::ReturnMessage  returnedValue ;        
    sumaReply *replyData = NULL;

    sumaRequestUtils::extractTypeData((sumaRequest*)requestData, id1  , id2  );
                                         
    returnedValue = srv->_impl->suma(id1  , id2  ,suma_ret  );
           
    replyData = sumaReplyUtils::createTypeData(suma_ret  );
                                                  
    // sendReply takes care of deleting the data
    service->sendReply(requestData, replyData, returnedValue);
    
    sumaReplyTypeSupport::delete_data(replyData);
    sumaRequestTypeSupport::delete_data((sumaRequest*)requestData);
    
        
}