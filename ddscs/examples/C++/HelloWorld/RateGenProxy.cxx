/** 
 * Generated by DDSCS: Do not edit.  Version 1.0 *
 */


#include "RateGenProxy.h"
#include "client/ClientRemoteService.h"
#include "RateGenRequestReplyPlugin.h"


RateGenProxy::RateGenProxy(int domainId, unsigned int timeout) : DDSCSClient(domainId)
{
    m_timeout = timeout;

        this->suma_Service = new sumaClientRemoteService("suma",
                                  getClientId(),
                                  sumaRequestUtils::registerType(getParticipant()),
                                  sumaReplyUtils::registerType(getParticipant()),
                                  getParticipant());

}

RateGenProxy::~RateGenProxy()
{
    delete suma_Service;
}

unsigned int RateGenProxy::getTimeout()
{
  return m_timeout;
}
 
 void RateGenProxy::setTimeout(unsigned int millis)
 {
    m_timeout = millis;
 }

 
DDSCSMessages
 RateGenProxy::suma(DDS_Long id1, DDS_Long id2 ,DDS_Long &suma_ret) 
{
    DDSCSMessages  returnedValue;    
    sumaRequest *instance = NULL;
    sumaReply *retInstance = sumaReplyTypeSupport::create_data();
    instance = sumaRequestUtils::createTypeData(id1    , id2    );
    returnedValue = suma_Service->execute(instance, retInstance, m_timeout);
    switch (returnedValue)
    {
        case CLIENT_ERROR:
            printf("CLIENT ERROR\n");
            break;
        case RECEIVED_OTHER_REQUEST:
            printf("Y ESTE PAQUETE?\n");
            break;
        case SERVER_TIMEOUT:
            printf("TIMEOUT\n");
            break;
        case SERVER_ERROR:
            printf("SERVER ERROR\n");
            break;
        case WITHOUT_RESOURCES:
            printf("SERVER WITHOUT RESOURCES\n");
            break;
        case OPERATION_SUCCESSFUL:
            sumaReplyUtils::extractTypeData(retInstance, suma_ret    );
            //sumaReplyTypeSupport::print_data(retInstance);
            suma_Service->replyRead();            
            break;
    };
    
    sumaReplyTypeSupport::delete_data(retInstance);
    sumaRequestTypeSupport::delete_data(instance);

    return returnedValue;
}