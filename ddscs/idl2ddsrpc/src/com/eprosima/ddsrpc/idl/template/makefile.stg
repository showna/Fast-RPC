group makefile;

makecxx(opendds, interface, example, arch) ::= <<
CPP_$example$ = g++
CXXFLAGS_$example$ = -m$arch$
LD_$example$ = g++
LDFLAGS_$example$ = -m$arch$
SYSLIBS_$example$ = -ldl -lnsl -lm -lpthread -lrt
$if(!opendds)$
DEFINES_ARCH_SPECIFIC = -DRTI_UNIX -DRTI_LINUX
$else$
DEFINES_ARCH_SPECIFIC = -DOPENDDS_LINUX
$endif$

DEFINES = \$(DEFINES_ARCH_SPECIFIC)  

$if(!opendds)$
INCLUDES = -I. -I\$(NDDSHOME)/include -I\$(NDDSHOME)/include/ndds -I\$(NDDSHOME)/ddsrpc/include  -I\$(DDS_ROOT)/ddsrpc/include/idl/rti
$else$
INCLUDES = -I. -I\$(DDS_ROOT) -I\$(TAO_ROOT) -I\$(ACE_ROOT) -I\$(DDS_ROOT)/ddsrpc/include -I\$(DDS_ROOT)/ddsrpc/include/idl/opendds
$endif$

$if(!opendds)$
LIBS = -L\$(NDDSHOME)/lib/$example$ -L\$(NDDSHOME)/ddsrpc/lib/$example$ \
       -lnddsc -lnddscore -lnddscpp -lddsrpc \$(SYSLIBS_$example$)
$else$
LIBS = -L\$(DDS_ROOT)/lib -L\$(ACE_ROOT)/lib -L\$(DDS_ROOT)/ddsrpc/lib/$example$ \
       -lOpenDDS_Dcps -lTAO -lTAO_AnyTypeCode -lACE -lddsrpc \$(SYSLIBS_$example$)
$endif$

$if(!opendds)$
COMMONCXXSOURCES = $interface$RequestReply.cxx $interface$.cxx $interface$RequestReplyPlugin.cxx \
                $interface$Plugin.cxx $interface$RequestReplySupport.cxx $interface$Support.cxx \
                $interface$RequestReplyUtils.cxx
$else$
COMMONCXXSOURCES = $interface$RequestReplyUtils.cxx
COMMONCPPSOURCES = $interface$C.cpp $interface$RequestReplyC.cpp \
                $interface$RequestReplyTypeSupportC.cpp $interface$RequestReplyTypeSupportImpl.cpp \
                $interface$TypeSupportC.cpp $interface$TypeSupportImpl.cpp
$endif$

CLIENTSOURCES = $interface$Proxy.cxx $interface$ClientRPCSupport.cxx $interface$AsyncSupport.cxx Client.cxx 
SERVERSOURCES = $interface$Server.cxx $interface$ServerImpl.cxx $interface$ServerRPCSupport.cxx Server.cxx 
DIRECTORIES   = objs.dir objs/$example$.dir
COMMONOBJS    = \$(COMMONCXXSOURCES:%.cxx=objs/$example$/%.o) $if(opendds)$\$(COMMONCPPSOURCES:%.cpp=objs/$example$/%.o)$endif$
CLIENTOBJS    = \$(CLIENTSOURCES:%.cxx=objs/$example$/%.o)
SERVEROBJS    = \$(SERVERSOURCES:%.cxx=objs/$example$/%.o)
CLIENTEXEC    = objs/$example$/$interface$Client
SERVEREXEC    = objs/$example$/$interface$Server

client: \$(DIRECTORIES) \$(COMMONOBJS) \$(CLIENTOBJS) \$(CLIENTEXEC)
server: \$(DIRECTORIES) \$(COMMONOBJS) \$(SERVEROBJS) \$(SERVEREXEC)

\$(CLIENTEXEC) : 
	\$(LD_$example$) \$(LDFLAGS_$example$)  -o \$(@:%.out=%) \$(COMMONOBJS) \$(CLIENTOBJS) \$(LIBS)

\$(SERVEREXEC) : 
	\$(LD_$example$) \$(LDFLAGS_$example$)  -o \$(@:%.out=%) \$(COMMONOBJS) \$(SERVEROBJS) \$(LIBS)

objs/$example$/%.o : %.cxx
	\$(CPP_$example$) \$(CXXFLAGS_$example$)  -o \$@ \$(DEFINES) \$(INCLUDES) -c \$<
	
objs/$example$/%.o : %.cpp
	\$(CPP_$example$) \$(CXXFLAGS_$example$)  -o \$@ \$(DEFINES) \$(INCLUDES) -c \$<

# Here is how we create those subdirectories automatically.
%.dir : 
	@echo "Checking directory \$*"
	@if [ ! -d \$* ]; then \
		echo "Making directory \$*"; \
		mkdir -p \$* ; \
	fi;

>>