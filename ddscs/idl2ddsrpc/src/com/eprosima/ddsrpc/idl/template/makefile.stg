group makefile;

makecxx(interface, example, arch) ::= <<
CPP_$example$ = g++
CXXFLAGS_$example$ = -m$arch$ -std=c++11
LD_$example$ = g++
LDFLAGS_$example$ = -m$arch$
SYSLIBS_$example$ = -ldl -lnsl -lm -lpthread -lrt
DEFINES_ARCH_SPECIFIC = $archMakeDefines()$

DEFINES = \$(DEFINES_ARCH_SPECIFIC)  

INCLUDES = -I. $inclMake()$

LIBS = $libsMake(example=example)$ -lddsrpc \$(SYSLIBS_$example$)

$sourceMake(interface=interface)$

CLIENTSOURCES = $interface$Proxy.cxx $interface$ClientRPCSupport.cxx $interface$AsyncSupport.cxx Client.cxx 
SERVERSOURCES = $interface$Server.cxx $interface$ServerImpl.cxx $interface$ServerRPCSupport.cxx Server.cxx 
DIRECTORIES   = objs.dir objs/$example$.dir
COMMONOBJS    = \$(COMMONCXXSOURCES:%.cxx=objs/$example$/%.o) \$(COMMONCPPSOURCES:%.cpp=objs/$example$/%.o)
CLIENTOBJS    = \$(CLIENTSOURCES:%.cxx=objs/$example$/%.o)
SERVEROBJS    = \$(SERVERSOURCES:%.cxx=objs/$example$/%.o)
CLIENTEXEC    = objs/$example$/$interface$Client
SERVEREXEC    = objs/$example$/$interface$Server

client: \$(DIRECTORIES) \$(COMMONOBJS) \$(CLIENTOBJS) \$(CLIENTEXEC)
server: \$(DIRECTORIES) \$(COMMONOBJS) \$(SERVEROBJS) \$(SERVEREXEC)

\$(CLIENTEXEC) : 
	\$(LD_$example$) \$(LDFLAGS_$example$)  -o \$(@:%.out=%) \$(COMMONOBJS) \$(CLIENTOBJS) \$(LIBS)

\$(SERVEREXEC) : 
	\$(LD_$example$) \$(LDFLAGS_$example$)  -o \$(@:%.out=%) \$(COMMONOBJS) \$(SERVEROBJS) \$(LIBS)

objs/$example$/%.o : %.cxx
	\$(CPP_$example$) \$(CXXFLAGS_$example$)  -o \$@ \$(DEFINES) \$(INCLUDES) -c \$<
	
objs/$example$/%.o : %.cpp
	\$(CPP_$example$) \$(CXXFLAGS_$example$)  -o \$@ \$(DEFINES) \$(INCLUDES) -c \$<

# Here is how we create those subdirectories automatically.
%.dir : 
	@echo "Checking directory \$*"
	@if [ ! -d \$* ]; then \
		echo "Making directory \$*"; \
		mkdir -p \$* ; \
	fi;

>>