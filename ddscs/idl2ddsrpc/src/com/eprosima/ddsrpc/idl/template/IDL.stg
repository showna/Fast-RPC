/* $Id$   *
 * (c) Copyright, eProsima, 2009.                                          *
 * All rights reserved.                                                    *    
 *                                                                         *
 * No duplications, whole or partial, manual or electronic, may be made    *
 * without express written permission.  Any such copies, or                *
 * revisions thereof, must display this notice unaltered.                  *
 * This code contains trade secrets of                                     *
 * eProsima (Proyectos y Sistemas de Mantenimiento S.L.)                   *
 *                                                                         *
 * modification history                                                    *
 * --------------------                                                    *
 * 1.0,29sep09,RodM Created                                                *
 * =====================================================================   *
 */

group IDL : cplusplus;

/************************************************************************
 *                                                                      *
 *   External Templates: Common Templates for IDL types definition      *
 *                                                                      *
 ************************************************************************
 */

/**
 * idlFile: External Template
 * Produces IDL file with type definitions 
 * Params:
 *   file   : list of other IDL files (with user defined types) to include.
 *   types  : list of IDL types definitions (structs, sequences...)
 *
 * Uses:
 *  doNotEditCplusplus - inherited(cplusplus)
 */ 
idlFile(file, types) ::= <<
$doNotEditCplusplus()$

$file:{#include "$it$"}$

$types:{$it$};separator="\n"$

>>



/**
 * request: External Template
 * Produces an IDL file for Request types. 
 * Params:
 *   name   : function name.
 *   fields : list of function parameters. In and inout parameters for Request,
 *            inout, out and return type for Reply.
 *
 */ 
request(name, fields) ::= <<

struct $name$Request{
    unsigned long clientServiceId[4]; //@key
    unsigned long numSec;
    $fields:{$it.type$ $it.name$;};separator="\n"$
}; //@top-level true
>>

/**
 * reply: External Template
 * Produces an IDL file for Reply types. 
 * Params:
 *   name   : function name.
 *   fields : list of function parameters. In and inout parameters for Request,
 *            inout, out and return type for Reply.
 */ 
reply(name, fields) ::= <<

struct $name$Reply{
    unsigned long serverServiceId[4]; //@key
    unsigned long clientServiceId[4]; //@key
    unsigned long numSec;
    long ddscsRetCode;
    $fields:{$it.type$ $it.name$;};separator="\n"$
}; //@top-level true
>>