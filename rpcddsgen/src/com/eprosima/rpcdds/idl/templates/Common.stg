group Common;

fileHeader(file, description) ::= <<
/*************************************************************************
 * Copyright (c) 2012 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * RPCDDS_LICENSE file included in this RPCDDS distribution.
 *
 *************************************************************************
 * 
 * @file $file$
 * $description$
 *
 * This file was generated by the tool rpcddsgen.
 */
>>

paramRetType(typecode) ::= <<
$if(typecode)$
$typecode.stTypename$
$else$
void
$endif$
>>

paramTypeByValue(typecode) ::= <<
$if(typecode.primitiveInArguments)$
$typecode.stTypename$
$else$
const $typecode.stTypename$&
$endif$
>>

paramTypeByRef(typecode) ::= <<
$typecode.stTypename$&
>>

paramDeclsByValue(params, separatorInicial) ::= <<
$if(params)$$separatorInicial$$endif$$params : {param |/*$param.comment$*/ $paramTypeByValue(typecode=param.typecode)$ $param.name$}; separator=", "$
>>

paramDeclsByRef(params, separatorInicial) ::= <<
$if(params)$$separatorInicial$$endif$$params : {param |/*$param.comment$*/ $paramTypeByRef(typecode=param.typecode)$ $param.name$}; separator=", "$
>>

paramDeclsOnlyOutByRef(params, separatorInicial) ::= <<
$if(params)$$separatorInicial$$endif$$params : {param | /*$param.comment$*/ $if(param.output)$$paramTypeByRef(typecode=param.typecode)$$else$$paramTypeByValue(typecode=param.typecode)$$endif$ $param.name$}; separator=", "$
>>

memberInit(member) ::= <<
$if(member)$
$if(member.typecode.primitiveInArguments)$
$member.name$ $member.typecode.initialValue$;
$else$
$memberComplexInit(...)$
$endif$
$endif$
>>

varDecl(variable, create) ::= <<
$if(variable)$
$if(variable.typecode.primitiveInArguments)$
$variable.typecode.stTypename$  $variable.name$ $variable.typecode.initialValue$;
$else$
$varComplexDecl(...)$
$endif$
$endif$
>>

varDel(variable) ::= <<
$if(variable)$
$if(variable.typecode.primitiveInArguments)$
$if(variable.typecode.string)$
$varStringDel(name=variable.name)$
$endif$
$else$
$varComplexDel(...)$
$endif$
$endif$
>>

extractParams(params, separatorInicial) ::= <<
$if(params)$$separatorInicial$$endif$$params : {param | $param.name$};separator=", "$
>>