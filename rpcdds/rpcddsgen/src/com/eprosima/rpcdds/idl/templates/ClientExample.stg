group ClientExample;

main(ctx, definitions) ::= <<
$fileHeader(file=[ctx.filename, "ClientExample.cxx"], description=["This source file shows a simple example of how to create a proxy for an interface."])$

#include "$ctx.filename$Proxy.h"
#include "exceptions/Exceptions.h"
$ReqRepIncludes(filename=ctx.filename)$

$ctx.includeDependencies : { include |#include "$include$T.h"}; separator="\n"$
$if(ctx.projectNeedTypes)$
#include "$ctx.filename$T.h"

$endif$

#include <iostream>

int main(int argc, char **argv)
{
    $ctx.firstInterface.scopedname$Proxy *proxy = NULL;
    
    // Creation of the proxy for interface "$ctx.firstInterface.scopedname$".
    try
    {
        proxy = new $ctx.firstInterface.scopedname$Proxy("$ctx.firstInterface.name$Service");
    }
    catch(eProsima::RPCDDS::InitializeException &ex)
    {
        std::cout << ex.what() << std::endl;
        return -1;
    }
    
    $if(ctx.firstInterface.firstOperation.parameters)$
    // Create and initialize parameters.
    $ctx.firstInterface.firstOperation.parameters : {param | $varDecl(variable=param)$};separator="\n"$
    $ctx.firstInterface.firstOperation.parameters : {param | $if(!param.typecode.primitiveInArguments)$$varComplexInitialize(variable=param)$$\n$$endif$}$
    $endif$
    $if(ctx.firstInterface.firstOperation.rettypeparam)$
    // Create and initialize return value.
    $varDecl(variable=ctx.firstInterface.firstOperation.rettypeparam)$
    $if(!ctx.firstInterface.firstOperation.rettypeparam.typecode.primitiveInArguments)$
    $varComplexInitialize(variable=ctx.firstInterface.firstOperation.rettypeparam)$
    $endif$
    $endif$

    // Call to remote procedure "$ctx.firstInterface.firstOperation.name$".
    try
    {
        $if(ctx.firstInterface.firstOperation.rettypeparam)$        $ctx.firstInterface.firstOperation.rettypeparam.name$ = $else$        $endif$proxy->$ctx.firstInterface.firstOperation.name$($extractParams(params=ctx.firstInterface.firstOperation.parameters)$);
    }
    $if(ctx.firstInterface.firstOperation.exceptions)$
    catch(eProsima::RPCDDS::UserException &ex)
    {
        std::cout << "User exception" << std::endl;
    }
    $endif$
    catch(eProsima::RPCDDS::SystemException &ex)
    {
        std::cout << ex.what() << std::endl;
    }
    $if(ctx.firstInterface.firstOperation.parameters)$
    
    $ctx.firstInterface.firstOperation.parameters : {param | $varDel(variable=param)$}; separator="\n"$
    $endif$
    $if(ctx.firstInterface.firstOperation.rettypeparam)$

    $varDel(variable=ctx.firstInterface.firstOperation.rettypeparam)$
    $endif$
    
    delete(proxy);
   
    return 0;
}

$definitions; separator="\n"$
>>

module(module, definition_list) ::= <<
$definition_list$
>>

definition_list(definitions) ::= <<
$definitions; separator="\n"$
>>

interface(ctx, interface, export_list) ::= <<
$export_list$
>>

export_list(exports) ::= <<
$exports; separator="\n"$
>>

exception(ctx, exception) ::= <<>>

operation(ctx, operation, param_list) ::= <<
$param_list$
>>

param_list(parameters) ::= <<>>

param(parameter) ::= <<>>

type_declarator(ctx, typedefs) ::= <<>>

struct_type(ctx, struct) ::= <<>>

union_type(ctx, union) ::= <<>>

enum_type(ctx, enum) ::= <<>>